swagger: '2.0'
info:
  title: TruBudget
  version: v1
host: none
schemes:
  - https
securityDefinitions:
  Bearer:
    description: JWT that is required for all routes except `/user.authenticate`.
    type: apiKey
    in: header
    name: Authorization
paths:
  "/user.create":
    post:
      tags:
        - user
      operationId: "user.create"
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - apiVersion
              - data
            properties:
              apiVersion:
                type: string
                enum:
                  - '1.0'
              data:
                type: object
                required:
                  - id
                  - displayName
                  - organization
                  - password
                properties:
                  id:
                    type: string
                  displayName:
                    type: string
                  organization:
                    type: string
                  password:
                    type: string
            example:
              apiVersion: '1.0'
              data:
                id: bob
                displayName: Bob the Builder
                organization: BuilderLand
                password: topsecret
      responses:
        '201':
          description: ''
          schema:
            type: string
            example:
              "alice"
        '401':
          description: Returned if bearer token is not provided or invalid.
        '403':
          description: Returned if the user is not authorized.

  "/user.list":
    get:
      tags:
        - user
      operationId: "user.list"
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            type: object
            required:
              - apiVersion
              - data
            properties:
              apiVersion:
                type: string
                enum:
                  - '1.0'
              data:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      required:
                        - id
                        - displayName
                        - organization
                      properties:
                        id:
                          type: string
                        displayName:
                          type: string
                        organization:
                          type: string
            example:
              apiVersion: '1.0'
              data:
                items:
                  - id: bob
                    displayName: Bob the Builder
                    organization: BuilderLand
        '401':
          description: Returned if bearer token is not provided or invalid.

  "/user.authenticate":
    post:
      tags:
        - user
      operationId: "user.authenticate"
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - apiVersion
              - data
            properties:
              apiVersion:
                type: string
                enum:
                  - '1.0'
              data:
                type: object
                required:
                  - id
                  - password
                properties:
                  id:
                    type: string
                  password:
                    type: string
            example:
              apiVersion: '1.0'
              data:
                id: bob
                password: topsecret
      responses:
        '200':
          description: 'JSON Web Token for use as bearer token in subsequent requests.'
          schema:
            type: string
        '403':
          description: Returned when providing invalid credentials.

  "/project.list":
    get:
      tags:
        - project
      operationId: "project.list"
      produces:
        - application/json
      responses:
          '200':
            description: 'An Array of projects'
            schema:
              type: array
              items:
                $ref: '#/definitions/Project'
          '403':
            description: Returned when providing invalid credentials.
  "/project.create":
    post:
      tags:
        - project
      operationId: "project.create"
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - apiVersion
              - data
            properties:
              apiVersion:
                type: string
                enum:
                  - '1.0'
              data:
                type: object
                required:
                  - name
                  - amount
                  - currency
                  - description
                properties:
                  name:
                    type: string
                  amount:
                    type: string
                  currency:
                    type: string
                  description:
                    type: string
                  thumbnail:
                    type: string
            example:
              apiVersion: '1.0'
              data:
                name: "MyProject"
                amount: "10000"
                currency: "EUR"
                description: "My project is awesome"
                thumbnail: "/picture1"
      responses:
          '200':
            description: 'OK'
            schema:
              type: string
          '403':
            description: Returned when providing invalid credentials.
definitions:
  Project:
    type: "object"
    properties:
      id:
        type: string
      displayName:
        type: string
      creationUnixTs:
        type: string
      status:
        type: string
        description: "Project Status"
        enum:
        - "open"
        - "done"
      amount:
        type: string
      currency:
        type: string
      description:
        type: string
      thumbnail:
        type: "string"

