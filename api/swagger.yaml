swagger: '2.0'
info:
  title: TruBudget
  version: v1
host: none
schemes:
  - https
securityDefinitions:
  Bearer:
    description: JWT that is required for all routes except `/user.authenticate`.
    type: apiKey
    in: header
    name: Authorization
paths:
  "/global.intent.grantPermission":
    post:
      tags:
        - global
      operationId: "global.intent.grantPermission"
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - apiVersion
              - data
            properties:
              apiVersion:
                type: string
                enum:
                  - '1.0'
              data:
                type: array
                items:
                  type: object
            example:
              apiVersion: "1.0"
              data: [
                "global.createProject": ["user1", "user2"]
                ]
      responses:
          '200':
            description: 'OK'
            schema:
              type: string
          '403':
            description: Returned when providing invalid credentials.
  "/user.create":
    post:
      tags:
        - user
      operationId: "user.create"
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - apiVersion
              - data
            properties:
              apiVersion:
                type: string
                enum:
                  - '1.0'
              data:
                type: object
                required:
                  - id
                  - displayName
                  - organization
                  - password
                properties:
                  id:
                    type: string
                  displayName:
                    type: string
                  organization:
                    type: string
                  password:
                    type: string
            example:
              apiVersion: '1.0'
              data:
                id: bob
                displayName: Bob the Builder
                organization: BuilderLand
                password: topsecret
      responses:
        '201':
          description: ''
          schema:
            type: object
            required:
              - apiVersion
              - data
            properties:
              apiVersion:
                type: string
                enum:
                  - '1.0'
              data:
                type: object
                required:
                  - id
                  - displayName
                  - organization
                properties:
                  id:
                    type: string
                  displayName:
                    type: string
                  organization:
                    type: string
                  allowedIntents:
                    type: array
                    items:
                      type: string
            example:
              apiVersion: '1.0'
              data:
                id: bob
                displayName: Bob the Builder
                organization: BuilderLand
                allowedIntents:
                  - user.authenticate
                  - project.list
        '401':
          description: Returned if bearer token is not provided or invalid.
        '403':
          description: Returned if the user is not authorized.

  "/user.list":
    get:
      tags:
        - user
      operationId: "user.list"
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            type: object
            required:
              - apiVersion
              - data
            properties:
              apiVersion:
                type: string
                enum:
                  - '1.0'
              data:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      required:
                        - id
                        - displayName
                        - organization
                      properties:
                        id:
                          type: string
                        displayName:
                          type: string
                        organization:
                          type: string
            example:
              apiVersion: '1.0'
              data:
                items:
                  - id: bob
                    displayName: Bob the Builder
                    organization: BuilderLand
        '401':
          description: Returned if bearer token is not provided or invalid.

  "/user.authenticate":
    post:
      tags:
        - user
      operationId: "user.authenticate"
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - apiVersion
              - data
            properties:
              apiVersion:
                type: string
                enum:
                  - '1.0'
              data:
                type: object
                required:
                  - id
                  - password
                properties:
                  id:
                    type: string
                  password:
                    type: string
            example:
              apiVersion: '1.0'
              data:
                id: bob
                password: topsecret
      responses:
        '200':
          description: 'JSON Web Token for use as bearer token in subsequent requests.'
          schema:
            type: object
            required:
              - apiVersion
              - data
            properties:
              apiVersion:
                type: string
                enum:
                  - '1.0'
              data:
                type: object
                required:
                  - id
                  - displayName
                  - organization
                  - token
                properties:
                  id:
                    type: string
                  displayName:
                    type: string
                  organization:
                    type: string
                  allowedIntents:
                    type: array
                    items:
                      type: string
                  token:
                    type: string
            example:
              apiVersion: '1.0'
              data:
                id: bob
                displayName: Bob the Builder
                organization: BuilderLand
                allowedIntents:
                  - user.authenticate
                  - project.list
                token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjoiYm9iIn0.7WaMww1dKLRMZVszVaBSM-FxBqHFOhVirnfQNIwoFa4
        '403':
          description: Returned when providing invalid credentials.

  "/project.list":
    get:
      tags:
        - project
      operationId: "project.list"
      produces:
        - application/json
      responses:
          '200':
            description: 'An Array of projects'
            schema:
              type: object
              properties:
                apiVersion:
                  type: string
                  enum:
                    - '1.0'
                data:
                  type: object
                  properties:
                    items:
                      type: array
                      items:
                        $ref: '#/definitions/Project'
          '403':
            description: Returned when providing invalid credentials.

  "/project.intent.list":
    get:
      tags:
        - project
      operationId: "project.intent.list"
      produces:
        - application/json
      parameters:
        - in: query
          name: projectId
          required: true
          type: string
      responses:
        "200":
          description: "OK"
          examples:
            apiVersion: "1.0"
            data: {
                "project.viewSummary": [
                    "mstein",
                ],
                "project.viewDetails": [
                    "mstein",
                ],
                "project.assign": [
                    "mstein",
                ],
                "project.intent.list": [
                    "mstein",
                ],
                "project.intent.grantPermission": [
                    "mstein"
                ],
                "project.intent.revokePermission": [
                    "mstein"
                ]
            }

  "/project.intent.grantPermission":
    post:
      tags:
        - project
      operationId: "project.intent.grantPermission"
      parameters:
        - in: body
          name: body
          schema:
            type: object
            example:
              apiVersion: "1.0"
              data:
                id: "projectId"
                permissions:
                  "project.viewDetails": ["UserA", "UserB"]
      responses:
        "200":
          description: "OK"



  "/project.create":
    post:
      tags:
        - project
      operationId: "project.create"
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - apiVersion
              - data
            properties:
              apiVersion:
                type: string
                enum:
                  - '1.0'
              data:
                type: object
                required:
                  - displayName
                  - amount
                  - currency
                properties:
                  displayName:
                    type: string
                  description:
                    type: string
                  amount:
                    type: string
                  currency:
                    type: string
                  thumbnail:
                    type: string
            example:
              apiVersion: '1.0'
              data:
                displayName: "MyProject"
                description: "My project is awesome"
                amount: "10000"
                currency: "EUR"
                thumbnail: "/picture1"
      responses:
          '200':
            description: 'OK'
            schema:
              type: string
          '403':
            description: Returned when providing invalid credentials.


  "/project.viewDetails/{projectId}":
    get:
      tags:
        - project
      operationId: "project.viewDetails"
      produces:
        - application/json
      parameters:
        - in: path
          name: projectId
          required: true
          type: string
      responses:
        '200':
            description: 'Project Details'
            schema:
              type: object
              properties:
                apiVersion:
                  type: string
                  enum:
                    - '1.0'
                data:
                  type: object
                  properties:
                    metadata:
                      type: array
                      items:
                        $ref: '#/definitions/Project'
                    log:
                      type: array
                      items:
                        $ref: '#/definitions/LogEntry'
                    permissions:
                      type: array
                      items:
                        type: array
                        items:
                          type: string

definitions:
  LogEntry:
    type: object
    properties:
      issuer:
        type: string
      action:
        type: string
  Project:
    type: object
    properties:
      id:
        type: string
      displayName:
        type: string
      creationUnixTs:
        type: string
      status:
        type: string
        description: Project Status
        enum:
        - open
        - done
      amount:
        type: string
      currency:
        type: string
      description:
        type: string
      thumbnail:
        type: string

