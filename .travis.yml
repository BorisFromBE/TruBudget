stages:
  - name: test
  - name: dockerbuild
  - name: notification

# provide PROJECT_NAME environment variable if you extend this template
.node-unit-test: &node-unit-test
  stage: test
  language: node_js
  node_js:
    - "10"
  cache: npm
  script:
    - cd $PROJECT_NAME
    - npm ci
    - npm test

# provide PROJECT_NAME environment variable if you extend this template
.docker-build: &docker-build
  stage: dockerbuild
  language: minimal
  services:
    - docker
  before_script:
    - cd $PROJECT_NAME
  script: ../scripts/pipeline/publish-docker-images.sh

jobs:
  include:
    # - <<: *node-unit-test
    #   env: PROJECT_NAME=blockchain
    # - <<: *node-unit-test
    #   env: PROJECT_NAME=api
    # - <<: *node-unit-test
    #   env: PROJECT_NAME=frontend
    - <<: *docker-build
      env: PROJECT_NAME=blockchain
    - <<: *docker-build
      env: PROJECT_NAME=api
    - <<: *docker-build
      env: PROJECT_NAME=frontend
    - <<: *docker-build
      env: PROJECT_NAME=provisioning
    - stage: notification
      language: minimal
      script:
        - echo "$TRAVIS_PULL_REQUEST_BRANCH"
        - echo "$TRAVIS_BRANCH"
        - |
          curl -X POST \
          -F token=$WEBHOOK_TOKEN \
          -F ref=$WEBHOOK_REF \
          -F "variables[TRAVIS_PULL_REQUEST_BRANCH]=$TRAVIS_PULL_REQUEST_BRANCH" \
          -F "variables[TRAVIS_BRANCH]=$TRAVIS_BRANCH" \
          -F "variables[TRAVIS_BUILD_ID]=$TRAVIS_BUILD_ID" \
          "$WEBHOOK_URL"
