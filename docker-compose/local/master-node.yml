version: '3.2'
services:
  api:
    build: 
      context: ../../api
    environment:
      RPC_HOST: master
      RPC_PORT: ${RPC_PORT}
      PORT: ${API_PORT}
      ORGANIZATION: ${ORGANIZATION}
      ORGANIZATION_VAULT_SECRET: ${ORGANIZATION_VAULT_SECRET}
      ROOT_SECRET: ${ROOT_SECRET}
    links: 
      - master

  master:
    build:
      context: ../../blockchain
    environment:
      CHAINNAME: ${CHAINNAME}
      RPC_PORT: ${RPC_PORT}
      ORGANIZATION: ${ORGANIZATION}
    volumes:
      - /tmp/bcMasterVolume:/root/.multichain

  testapi:
    build: 
      context: ../../api
    environment:
      RPC_HOST: testmaster
      RPC_PORT: ${RPC_PORT}
      PORT: ${API_PORT}
      ORGANIZATION: ${ORGANIZATION}
      ORGANIZATION_VAULT_SECRET: ${ORGANIZATION_VAULT_SECRET}
      ROOT_SECRET: ${ROOT_SECRET}
    links: 
      - testmaster

  testmaster:
    build:
      context: ../../blockchain
    environment:
      CHAINNAME: ${CHAINNAME}
      RPC_PORT: ${RPC_PORT}
      ORGANIZATION: ${ORGANIZATION}
    volumes:
      - /tmp/bcTestMasterVolume:/root/.multichain

  frontend:
    build:
      context: ../../frontend
    ports:
      - "80:80" # Mapping the nginx port 
    environment:
      PROD_API_HOST: api
      PROD_API_PORT: ${API_PORT}
      TEST_API_HOST: testapi
      TEST_API_PORT: ${API_PORT}
    links:
      - api
      - testapi

  provision-prod:
    build:
      context: ../../provisioning
    command: ["npm", "start"]
    environment:
      API_HOST: api
      API_PORT: 8080
      ENVIRONMENT_TYPE: PROD
      ROOT_SECRET: ${ROOT_SECRET}
      ORGANIZATION: ${ORGANIZATION}
    links: 
      - api

  provision-test:
    build:
      context: ../../provisioning
    command: ["npm", "start"]
    environment:
      API_HOST: testapi
      API_PORT: 8080
      ENVIRONMENT_TYPE: PROD
      ROOT_SECRET: ${ROOT_SECRET}
      ORGANIZATION: ${ORGANIZATION}
    links:
      - testapi
