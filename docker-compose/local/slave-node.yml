version: '3.2'
services:
  api:
    build:
      context: ../../api
    environment:
      RPC_HOST: bc-slave
      RPC_PORT: ${RPC_PORT}
      PORT: ${API_PORT}
      ORGANIZATION: ${ORGANIZATION}
      ORGANIZATION_VAULT_SECRET: ${ORGANIZATION_VAULT_SECRET}
      ROOT_SECRET: ${ROOT_SECRET}
      RPC_PASSWORD: ${RPC_PASSWORD}
      LOG_LEVEL: ${LOG_LEVEL}
      PRETTY_PRINT: ${PRETTY_PRINT}
      SWAGGER_BASEPATH: /prod
    links: 
      - bc-slave

  bc-slave:
    build:
      context: ../../blockchain
    environment:
      RPC_PORT: ${RPC_PORT}
      ORGANIZATION: ${ORGANIZATION}
      RPC_PASSWORD: ${RPC_PASSWORD}
      P2P_HOST: ${P2P_PROD_HOST}
      P2P_PORT: ${P2P_PROD_PORT}
      API_PROTO: http
      API_HOST: ${API_PROD_HOST}
      API_PORT: ${API_PROD_PORT}
    volumes:
      - /tmp/bcSlaveVolume:/root/.multichain

  testapi:
    build:
      context: ../../api
    environment:
      RPC_HOST: test-bc-slave
      RPC_PORT: ${RPC_PORT}
      PORT: ${API_PORT}
      ORGANIZATION: ${ORGANIZATION}
      ORGANIZATION_VAULT_SECRET: ${ORGANIZATION_VAULT_SECRET}
      ROOT_SECRET: ${ROOT_SECRET}
      RPC_PASSWORD: ${RPC_PASSWORD}
      LOG_LEVEL: ${LOG_LEVEL}
      PRETTY_PRINT: ${PRETTY_PRINT}
      SWAGGER_BASEPATH: /test
    links: 
      - test-bc-slave

  test-bc-slave:
    build:
      context: ../../blockchain
    environment:
      RPC_PORT: ${RPC_PORT}
      ORGANIZATION: ${ORGANIZATION}
      RPC_PASSWORD: ${RPC_PASSWORD}
      P2P_HOST: ${P2P_TEST_HOST}
      P2P_PORT: ${P2P_TEST_PORT}
      API_PROTO: http
      API_HOST: ${API_TEST_HOST}
      API_PORT: ${API_TEST_PORT}
    volumes:
      - /tmp/bcTestSlaveVolume:/root/.multichain



  frontend:
    build:
      context: ../../frontend
    ports:
      - "80:80" # Mapping the nginx port 
    environment:
      PROD_API_HOST: api
      PROD_API_PORT: ${API_PORT}
      TEST_API_HOST: testapi
      TEST_API_PORT: ${API_PORT}
    links:
      - api
      - testapi

